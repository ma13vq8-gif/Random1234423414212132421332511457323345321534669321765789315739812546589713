local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")

-- GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SpinFlingerGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Helper: create toggle
local function createToggle(parent, text, yPos, default)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 200, 0, 40)
    btn.Position = UDim2.new(0, 20, 0, yPos)
    btn.BackgroundColor3 = default and Color3.fromRGB(60,150,60) or Color3.fromRGB(150,60,60)
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 18
    btn.Text = text..(default and ": ON" or ": OFF")
    btn.Parent = parent
    btn.BorderSizePixel = 0
    btn.AutoButtonColor = true

    local state = default
    btn.MouseButton1Click:Connect(function()
        state = not state
        btn.Text = text..(state and ": ON" or ": OFF")
        btn.BackgroundColor3 = state and Color3.fromRGB(60,150,60) or Color3.fromRGB(150,60,60)
    end)
    return function() return state end, function(value)
        state = value
        btn.Text = text..(state and ": ON" or ": OFF")
        btn.BackgroundColor3 = state and Color3.fromRGB(60,150,60) or Color3.fromRGB(150,60,60)
    end
end

-- Create toggles (start OFF)
local flyEnabled, setFly = createToggle(ScreenGui, "Fly", 50, false)
local spinEnabled, setSpin = createToggle(ScreenGui, "Spin", 110, false)

-- Helper: create TextBox input for speed
local function createSpeedInput(parent, labelText, yPos, defaultVal, maxVal)
    local value = defaultVal

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 220, 0, 60)
    frame.Position = UDim2.new(0, 20, 0, yPos)
    frame.BackgroundColor3 = Color3.fromRGB(40,40,40)
    frame.Parent = parent

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1,0,0,20)
    label.Position = UDim2.new(0,0,0,0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255,255,255)
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 14
    label.Text = labelText.." : "..value
    label.Parent = frame

    local input = Instance.new("TextBox")
    input.Size = UDim2.new(1, -20, 0, 30)
    input.Position = UDim2.new(0, 10, 0, 30)
    input.BackgroundColor3 = Color3.fromRGB(100,100,100)
    input.TextColor3 = Color3.fromRGB(255,255,255)
    input.Text = tostring(defaultVal)
    input.Font = Enum.Font.SourceSansBold
    input.TextSize = 18
    input.ClearTextOnFocus = false
    input.Parent = frame

    input.FocusLost:Connect(function(enterPressed)
        local num = tonumber(input.Text)
        if num then
            num = math.clamp(num, 0, maxVal)
            value = num
            input.Text = tostring(num)
            label.Text = labelText.." : "..num
        else
            input.Text = tostring(value)
        end
    end)

    return function() return value end
end

-- Speed inputs
local getFlySpeed = createSpeedInput(ScreenGui, "Fly Speed", 180, 50, 9999)
local getSpinSpeed = createSpeedInput(ScreenGui, "Spin Speed", 260, 180, 9999)

-- Destroy button
local destroyBtn = Instance.new("TextButton")
destroyBtn.Size = UDim2.new(0, 200, 0, 40)
destroyBtn.Position = UDim2.new(0, 20, 0, 330)
destroyBtn.BackgroundColor3 = Color3.fromRGB(150,50,50)
destroyBtn.TextColor3 = Color3.fromRGB(255,255,255)
destroyBtn.Font = Enum.Font.SourceSansBold
destroyBtn.TextSize = 18
destroyBtn.Text = "Destroy GUI"
destroyBtn.Parent = ScreenGui
destroyBtn.BorderSizePixel = 0
destroyBtn.AutoButtonColor = true

destroyBtn.MouseButton1Click:Connect(function()
    setFly(false)
    setSpin(false)
    ScreenGui:Destroy()
end)

-- Movement
local keysDown = {}
local moveVec = Vector3.new(0,0,0)
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    keysDown[input.KeyCode] = true
end)
UserInputService.InputEnded:Connect(function(input)
    if processed then return end
    keysDown[input.KeyCode] = false
end)

local function updateMoveVec()
    local vec = Vector3.new(0,0,0)
    if keysDown[Enum.KeyCode.W] then vec = vec + workspace.CurrentCamera.CFrame.LookVector end
    if keysDown[Enum.KeyCode.S] then vec = vec - workspace.CurrentCamera.CFrame.LookVector end
    if keysDown[Enum.KeyCode.A] then vec = vec - workspace.CurrentCamera.CFrame.RightVector end
    if keysDown[Enum.KeyCode.D] then vec = vec + workspace.CurrentCamera.CFrame.RightVector end
    if keysDown[Enum.KeyCode.Space] then vec = vec + Vector3.new(0,1,0) end
    if keysDown[Enum.KeyCode.LeftShift] then vec = vec - Vector3.new(0,1,0) end
    if vec.Magnitude > 0 then vec = vec.Unit end
    moveVec = vec
end

-- Table to prevent multiple flings per frame
local flingCooldown = {}

-- Main loop
RunService.RenderStepped:Connect(function(dt)
    if not HRP or not HRP.Parent then return end
    updateMoveVec()

    -- Smooth Fly
    if flyEnabled() then
        local currentVelocity = HRP.Velocity
        local targetVelocity = moveVec * getFlySpeed()
        local blendFactor = 0.2 -- smaller = smoother
        HRP.Velocity = currentVelocity:Lerp(targetVelocity, blendFactor)
    end

    -- Spin in place
    if spinEnabled() then
        local rotation = CFrame.Angles(0, math.rad(getSpinSpeed() * dt), 0)
        HRP.CFrame = HRP.CFrame * rotation
    end
end)

-- Spin fling on touch
HRP.Touched:Connect(function(hit)
    if not spinEnabled() then return end
    local otherChar = hit.Parent
    if otherChar and otherChar ~= Character then
        local otherHRP = otherChar:FindFirstChild("HumanoidRootPart")
        if otherHRP then
            if not flingCooldown[otherHRP] then
                flingCooldown[otherHRP] = true
                local direction = (otherHRP.Position - HRP.Position).Unit
                otherHRP.Velocity = direction * getSpinSpeed()
                RunService.RenderStepped:Wait()
                flingCooldown[otherHRP] = nil
            end
        end
    end
end)
